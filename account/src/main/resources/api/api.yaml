openapi: 3.0.3
info:
  version: 1.0.0
  title: Account Service
  description: API for managing account accounts.
servers:
  - url: 'http:/localhost:8082/api'
paths:
  /account/all:
    get:
      tags:
        - Account
      summary: Getting all accounts
      operationId: getAllAccounts
      responses:
        "201":
          description: Successful retrieval of all accounts.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /account/all/active:
    get:
      tags:
        - Account
      summary: Getting all active accounts
      operationId: getAllActiveAccounts
      responses:
        "201":
          description: Successful retrieval of all active accounts.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /account/{id}:
    get:
      tags:
        - Account
      summary: Getting single account by id
      operationId: getAccountById
      responses:
        "201":
          description: Successful retrieval of account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: id
          required: true
          description: The account id
  /account/{id}/delete:
    get:
      tags:
        - Account
      summary: Deleting single account by id
      operationId: deleteAccount
      responses:
        "201":
          description: Successful deletion of account.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: id
          required: true
          description: The account id
  /account/email/{email}:
    get:
      tags:
        - Account
      summary: Getting single account by email
      operationId: getAccountByEmail
      responses:
        "201":
          description: Successful retrieval of account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: string
          in: query
          name: email
          required: true
          description: Unique account email
  /account/short/email/{email}:
    get:
      tags:
        - Account
      summary: Getting single short account by email
      operationId: getShortAccountByEmail
      responses:
        "201":
          description: Successful retrieval of short account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortAccountDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: string
          in: query
          name: email
          required: true
          description: Unique account email
  /account/update:
    post:
      tags:
        - Account
      summary: Update account
      operationId: updateAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAccountDTO"
      responses:
        "201":
          description: Successful update of account.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /account/create:
    post:
      tags:
        - Account
      summary: Create account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountDTO"
      responses:
        "201":
          description: Successful creation of account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"

  /player/all:
    get:
      tags:
        - Player
      summary: Getting all players
      operationId: getAllPlayers
      responses:
        "201":
          description: Successful retrieval of all players.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /player/all/active:
    get:
      tags:
        - Player
      summary: Getting all active players
      operationId: getAllActivePlayers
      responses:
        "201":
          description: Successful retrieval of all players.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /player/{id}:
    get:
      tags:
        - Player
      summary: Getting single player by id
      operationId: getPlayerById
      responses:
        "201":
          description: Successful retrieval of player.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: id
          required: true
          description: The player id
  /player/{id}/deactivate:
    get:
      tags:
        - Player
      summary: Deactivating single player by id
      operationId: deactivatePlayer
      responses:
        "201":
          description: Successful deactivation of player.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: id
          required: true
          description: The player id
  /player/{email}:
    get:
      tags:
        - Player
      summary: Getting single player by email
      operationId: getPlayerByEmail
      responses:
        "201":
          description: Successful retrieval of player.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: string
          in: query
          name: email
          required: true
          description: Unique player email
  /player/update:
    post:
      tags:
        - Player
      summary: Update player
      operationId: updatePlayer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePlayerDTO"
      responses:
        "201":
          description: Successful update of player.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /player/create:
    post:
      tags:
        - Player
      summary: Create player
      operationId: createPlayer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlayerDTO'
      responses:
        "201":
          description: Successful creation of player.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"

  /team/all:
    get:
      tags:
        - Team
      summary: Getting all teams
      operationId: getAllTeams
      responses:
        "201":
          description: Successful retrieval of all teams.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /team/all/active:
    get:
      tags:
        - Team
      summary: Getting all active teams
      operationId: getAllActiveTeams
      responses:
        "201":
          description: Successful retrieval of all teams.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /team/{id}:
    get:
      tags:
        - Team
      summary: Getting single team by id
      operationId: getTeamById
      responses:
        "201":
          description: Successful retrieval of team.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: id
          required: true
          description: The team id
  /team/{id}/deactivate:
    get:
      tags:
        - Team
      summary: Deactivating single team by id
      operationId: deactivateTeam
      responses:
        "201":
          description: Successful deactivation of team.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: id
          required: true
          description: The team id
  /team/update:
    post:
      tags:
        - Team
      summary: Update team
      operationId: updateTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTeamDTO"
      responses:
        "201":
          description: Successful update of team.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /team/create:
    post:
      tags:
        - Team
      summary: Create team
      operationId: createTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamDTO'
      responses:
        "201":
          description: Successful creation of team.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /team/{id}/players:
    get:
      tags:
        - Team
      summary: Getting all players in team
      operationId: getAllPlayersByTeam
      responses:
        "201":
          description: Successful retrieval of all players in team.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: id
          required: true
          description: The team id
  /team/all/game/{name}:
    get:
      tags:
        - Team
      summary: Getting all teams by game
      operationId: getAllTeamsByGame
      responses:
        "201":
          description: Successful retrieval of all teams by game.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: string
          in: query
          name: id
          required: true
          description: The game id


  /game/all:
    get:
      tags:
        - Game
      summary: Getting all games
      operationId: getAllGames
      responses:
        "201":
          description: Successful retrieval of all games.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GameDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /game/update:
    post:
      tags:
        - Game
      summary: Update game
      operationId: updateGame
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GameUpdatedDTO"
      responses:
        "201":
          description: Successful update of team.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /game/create:
    post:
      tags:
        - Game
      summary: Create game
      operationId: createGame
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGameDTO'
      responses:
        "201":
          description: Successful creation of team.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
components:
  schemas:
    ErrorDto:
      title: Error
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    AccountDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string
        isActive:
          type: boolean
    ShortAccountDTO:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        username:
          type: string
    TeamDTO:
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        captain:
          type: string
          format: uuid
        game:
          type: string
          format: uuid
        description:
          type: string
        isActive:
          type: boolean
    PlayerDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string
        isActive:
          type: boolean
        team:
          type: string
          format: uuid
        birthday:
          type: string
        countryOrigin:
          type: string
        playerName:
          type: string
        role:
          type: string
        twitter:
          type: string
        twitch:
          type: string
        youtube:
          type: string
        instagram:
          type: string
        image:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
    UpdateAccountDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          required: true
        name:
          type: string
          required: false
        email:
          type: string
          required: false
        username:
          type: string
          required: false
        password:
          type: string
          required: false
    CreateAccountDTO:
      type: object
      properties:
        name:
          type: string
          required: false
        email:
          type: string
          required: false
        username:
          type: string
          required: false
        password:
          type: string
          required: false
    UpdatePlayerDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          required: true
        name:
          type: string
          required: false
        email:
          type: string
          required: false
        username:
          type: string
          required: false
        password:
          type: string
          required: false
        team:
          type: string
          format: uuid
          required: false
        birthday:
          type: string
          required: false
        countryOrigin:
          type: string
          required: false
        image:
          type: string
          required: false
        playerName:
          type: string
          required: true
        gender:
          type: string
          required: false
          enum:
            - MALE
            - FEMALE
            - OTHER
        role:
          type: string
          required: false
        twitter:
          type: string
          required: false
        twitch:
          type: string
          required: false
        youtube:
          type: string
          required: false
        instagram:
          type: string
          required: false
    CreatePlayerDTO:
      type: object
      properties:
        email:
          type: string
          required: true
        username:
          type: string
          required: true
        team:
          type: string
          format: uuid
          required: false
        birthday:
          type: string
          required: true
        countryOrigin:
          type: string
          required: true
        image:
          type: string
          required: true
        playerName:
          type: string
          required: true
        gender:
          type: string
          required: true
          enum:
            - MALE
            - FEMALE
            - OTHER
        role:
          type: string
          required: false
        twitter:
          type: string
          required: false
        twitch:
          type: string
          required: false
        youtube:
          type: string
          required: false
        instagram:
          type: string
          required: false
    UpdateTeamDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          required: true
        name:
          type: string
          required: false
        captain:
          type: string
          format: uuid
          required: false
        game:
          type: string
          format: uuid
          required: false
        description:
          type: string
          required: false
    CreateTeamDTO:
      type: object
      properties:
        name:
          type: string
          required: false
        captain:
          type: string
          format: uuid
          required: false
        game:
          type: string
          format: uuid
          required: false
        description:
          type: string
          required: false
    CreateGameDTO:
      type: object
      properties:
        title:
          type: string
          required: false
        image:
          type: string
          required: false
        logo:
          type: string
          required: false
    GameDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        image:
          type: string
        logo:
          type: string
    GameUpdatedDTO:
      type: object
      properties:
        id:
          type: string
          required: true
          format: uuid
        title:
          type: string
          required: false
        image:
          type: string
          required: false
        logo:
          type: string
          required: false
    RoleDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        isActive:
          type: boolean

