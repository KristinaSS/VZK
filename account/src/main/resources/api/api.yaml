openapi: 3.0.3
info:
  version: 1.0.0
  title: Account Service
  description: API for managing user accounts.
servers:
  - url: 'http:/localhost:8080/api'
paths:
  /user/all:
    get:
      tags:
        - Account
      summary: Getting all users
      operationId: getAllUsers
      responses:
        "201":
          description: Successful retrieval of all users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /user/{id}:
    get:
      tags:
        - Account
      summary: Getting single user by id
      operationId: getUserById
      responses:
        "201":
          description: Successful retrieval of user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: number
            minimum: 1
          in: query
          name: User Id
          required: true
          description: The account id

  /user/{id}/rights:
    get:
      tags:
        - Account
      summary: Getting single user's rights by id
      operationId: getUserRightsById
      responses:
        "201":
          description: Successful retrieval of user rights.
          content:
            application/json:
              schema:
                type: string
                enum:
                  - ADMIN
                  - USER

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: number
            minimum: 1
          in: query
          name: User Id
          required: true
          description: The account id
  /user/{id}/delete:
    get:
      tags:
        - Account
      summary: Deleting single user by id
      operationId: deleteUser
      responses:
        "201":
          description: Successful deletion of user.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: number
            minimum: 1
          in: query
          name: User Id
          required: true
          description: The account id
  /user/{email}:
    get:
      tags:
        - Account
      summary: Getting single user by email
      operationId: getUserByEmail
      responses:
        "201":
          description: Successful retrieval of user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            type: string
          in: query
          name: User email
          required: true
          description: Unique account email
  /user/update:
    get:
      tags:
        - Account
      summary: Update user
      operationId: updateUser
      responses:
        "201":
          description: Successful update of user.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            $ref: '#/components/schemas/UserDTO'
          in: query
          name: Updated user
          required: true
  /user/create:
    get:
      tags:
        - Account
      summary: Create user
      operationId: createUser
      responses:
        "201":
          description: Successful creation of user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
      parameters:
        - schema:
            $ref: '#/components/schemas/UserDTO'
          in: query
          name: New user
          required: true

components:
  schemas:
    ErrorDto:
      title: Error
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          required: false
        name:
          type: string
        email:
          type: string
        password:
          type: string
        isActive:
          type: boolean
        accountType:
          type: string
          enum:
            - ADMIN
            - USER