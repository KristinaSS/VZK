openapi: 3.0.3
info:
  title: Authentication API
  version: 1.0.0
  description: API for user authentication
servers:
  - url: 'http:/localhost:8081/api/v1'
paths:
  /authentication/login:
    post:
      summary: Authenticate a user
      operationId: login
      tags:
        - Authentication
      requestBody:
        description: User credentials for authentication
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialsDTO"
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JwtAuthenticationResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /authentication/signup:
    post:
      summary: Create a user
      operationId: signUp
      tags:
        - Authentication
      requestBody:
        description: User credentials for authentication
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountDTO"
      responses:
        '200':
          description: Successful creation of user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JwtAuthenticationResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /authentication/logout:
    get:
      tags:
        - Authentication
      summary: Logout
      operationId: logout
      responses:
        302:
          description: Found
  /authentication/userInfo:
    get:
      tags:
        - Authentication
      summary: UserInfo
      operationId: getUserInfo
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfoDTO"
  /authorization/authorize:
    get:
      tags:
        - Authorization
      summary: Your GET endpoint
      operationId: authorize
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
      parameters:
        - schema:
            type: string
          in: query
          name: destination
          required: true
          description: destination,
components:
  schemas:
    ErrorDto:
      title: Error
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    AccountDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string
        isActive:
          type: boolean
    CredentialsDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    RoleDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        isActive:
          type: boolean
    PermissionDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        isActive:
          type: boolean
    CreateAccountDTO:
      type: object
      properties:
        name:
          type: string
          required: false
        email:
          type: string
          required: false
        username:
          type: string
          required: false
        password:
          type: string
          required: false
    JwtAuthenticationResponse:
      type: object
      properties:
        token:
          type: string
    UserInfoDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        password:
          type: string
        isActive:
          type: boolean