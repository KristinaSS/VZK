openapi: 3.0.3
info:
  title: Authentication API
  version: 1.0.0
  description: API for user authentication
paths:
  /api/v1/auth/login:
    post:
      summary: Authenticate a user
      operationId: login
      tags:
        - authentication
      requestBody:
        description: User credentials for authentication
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialsDTO"
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JwtAuthenticationResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /api/v1/auth/signup:
    post:
      summary: Create a user
      operationId: signUp
      tags:
        - authentication
      requestBody:
        description: User credentials for authentication
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountDTO"
      responses:
        '200':
          description: Successful creation of user
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /api/v1/auth/validateToken:
    get:
      summary: Validate a JWT token
      operationId: validateToken
      tags:
        - authorization
      parameters:
        - name: Authorization
          in: header
          description: The JWT token to validate
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JwtAuthorizationResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /api/v1/auth/authorize:
    post:
      summary: Authorize a user based on the request path
      operationId: authorize
      tags:
        - authorization
      parameters:
        - name: Authorization
          in: header
          description: The JWT token to authorize
          required: true
          schema:
            type: string
      requestBody:
        description: Request path for authorization
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JwtAuthorizationRequest"
      responses:
        '200':
          description: Authorization successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JwtAuthorizationResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /api/v1/auth/verify:
    post:
      summary: Verify token
      operationId: verify
      tags:
        - authentication
      requestBody:
        description: Token for verification
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationToken"
      responses:
        '200':
          description: Successful verification
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /api/v1/auth/resend:
    post:
      summary: Resend token
      operationId: resend
      tags:
        - authentication
      requestBody:
        description: Token for verification
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationToken"
      responses:
        '200':
          description: Successful verification
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /api/v1/auth/role:
    post:
      summary: Get person permission
      operationId: getRole
      tags:
        - authentication
      requestBody:
        description: Get person permission
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationToken"
      responses:
        '200':
          description: Successful verification
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /api/v1/auth/email:
    post:
      summary: Get person email
      operationId: getEmail
      tags:
        - authentication
      requestBody:
        description: Get person email
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationToken"
      responses:
        '200':
          description: Successful get of email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
  /api/v1/auth/user/update:
    post:
      summary: update a user
      operationId: updateUser
      tags:
        - authentication
      requestBody:
        description: Update user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAccountDTO"
      responses:
        '200':
          description: Successful creation of user
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDto"
components:
  schemas:
    ErrorDto:
      title: Error
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    AccountDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string
        isActive:
          type: boolean
    CredentialsDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    RoleDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        isActive:
          type: boolean
    PermissionDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        isActive:
          type: boolean
    CreateAccountDTO:
      type: object
      properties:
        name:
          type: string
          required: false
        email:
          type: string
          required: false
        username:
          type: string
          required: false
        password:
          type: string
          required: false
    UpdateAccountDTO:
      type: object
      properties:
        name:
          type: string
          required: false
        email:
          type: string
          required: true
        username:
          type: string
          required: false
        password:
          type: string
          required: false
    JwtAuthenticationResponse:
      type: object
      properties:
        token:
          type: string
        username:
          type: string
    JwtAuthorizationResponse:
      type: object
      properties:
        isValid:
          type: boolean
    JwtAuthorizationRequest:
      type: object
      properties:
        path:
          type: string
        email:
          type: string
        id:
          type: string
    VerificationToken:
      type: object
      properties:
        vToken:
          type: string
        email:
          type: string
    VerificationResponse:
      type: object
      properties:
        status:
          type: string
    RoleResponse:
      type: object
      properties:
        role:
          type: string
    EmailResponse:
      type: object
      properties:
        email:
          type: string
